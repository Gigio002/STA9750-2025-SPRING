---
title: "Mini-Project 03: Creating the Ultimate Playlist"
author: "Giovanni Scacco"
format: html
editor: visual
theme: lux
toc: true
---

```{r setup, include=FALSE}
library(tidyverse)
library(jsonlite)
library(stringr)

# Helper function
strip_spotify_prefix <- function(x) {
  str_replace(x, "spotify:(artist|track|album):", "")
}

# Load playlists
load_playlists <- function() {
  json_files <- list.files("data/mp03/playlists", pattern = "*.json", full.names = TRUE)
  
  map_dfr(json_files, function(file) {
    pl_data <- fromJSON(file)
    playlists <- pl_data$playlists
    
    map_dfr(1:nrow(playlists), function(i) {
      playlist <- playlists[i, ]
      tracks <- playlist$tracks[[1]]
      
      if (is.null(tracks) || nrow(tracks) == 0) return(NULL)
      
      tibble(
        playlist_name = rep(playlist$name, nrow(tracks)),
        playlist_id = rep(playlist$pid, nrow(tracks)),
        playlist_followers = rep(playlist$num_followers, nrow(tracks)),
        playlist_position = tracks$pos,
        track_name = tracks$track_name,
        track_uri = tracks$track_uri,
        artist_name = tracks$artist_name,
        artist_uri = tracks$artist_uri,
        album_name = tracks$album_name,
        album_uri = tracks$album_uri,
        duration = tracks$duration_ms
      )
    })
  })
}

PLAYLIST_DF <- load_playlists() %>%
  mutate(
    track_id = strip_spotify_prefix(track_uri),
    artist_id = strip_spotify_prefix(artist_uri),
    album_id = strip_spotify_prefix(album_uri)
  )

# ✅ Correctly Load SONGS Immediately
load_songs <- function() {
  url <- "https://raw.githubusercontent.com/gabminamedez/spotify-data/refs/heads/master/data.csv"
  destfile <- "data/mp03/songs/data.csv"
  
  if (!file.exists(destfile)) {
    dir.create("data/mp03/songs", recursive = TRUE, showWarnings = FALSE)
    download.file(url, destfile, mode = "wb")
  }
  
  read_csv(destfile)
}

SONGS <- load_songs()
```

### Exploratory Data Analysis
In this section, I conducted preliminary exploration of the playlist and song datasets to understand their structure and key characteristics.
By identifying unique tracks and artists, as well as analyzing popularity and danceability metrics, I set a foundation for curating a high-quality playlist.

## Distinct Tracks and Artists
Here, I measured the diversity of the dataset by counting the number of unique tracks and unique artists across all playlists.

A higher number of distinct tracks suggests rich musical variety.

A higher number of distinct artists indicates a wide range of musical influences and genres.

Understanding this diversity helps ensure that my curated playlist reflects a broad musical landscape.

```{r}
PLAYLIST_DF %>% distinct(track_id) %>% nrow()
PLAYLIST_DF %>% distinct(artist_id) %>% nrow()
```

## Most Popular Tracks
To gauge listener preferences, I analyzed which songs appeared most frequently across user playlists.

Identifying the top 5 most popular tracks highlights songs that resonate strongly with a large audience.

This analysis also helped me select anchor songs that would form the backbone of my curated playlist.
```{r}
PLAYLIST_DF %>% 
  group_by(track_name) %>% 
  summarise(appearances = n()) %>% 
  arrange(desc(appearances)) %>% 
  slice_head(n = 5)
```

## Most Danceable Track
Danceability is a crucial feature that reflects how suitable a track is for dancing — based on beat, tempo, rhythm stability, and energy.

By finding the song with the highest danceability score, I discovered the track most likely to energize and engage listeners.

Danceability was a key attribute I considered when selecting songs to maintain an upbeat and smooth playlist flow.
```{r}
SONGS %>% arrange(desc(danceability)) %>% slice(1)
```
---

# Playlist Curation

Based on anchor songs "One Dance" and "Closer", I explored related songs using playlist co-occurrence, musical features, artist connection, year similarity, and valence matching.

```{r}
ultimate_playlist <- tibble(
  track_order = 1:12,
  track_name = c(
    "Don't Let Me Down",
    "Cold Water",
    "Too Good",
    "Broccoli (feat. Lil Yachty)",
    "Work from Home",
    "Forever",
    "Roses",
    "Party In The U.S.A.",
    "See You Again",
    "Replay",
    "Paper Planes",
    "Soak Up The Sun"
  ),
  artist = c(
    "The Chainsmokers",
    "Major Lazer feat. Justin Bieber & MØ",
    "Drake feat. Rihanna",
    "D.R.A.M. feat. Lil Yachty",
    "Fifth Harmony",
    "Chris Brown",
    "The Chainsmokers",
    "Miley Cyrus",
    "Wiz Khalifa",
    "Iyaz",
    "M.I.A.",
    "Sheryl Crow"
  )
)
```

---

# Playlist Feature Analysis

```{r}
# Enrich Playlist
final_playlist_features <- ultimate_playlist %>%
  left_join(SONGS %>% rename(track_name = name), by = "track_name") %>%
  distinct(track_name, .keep_all = TRUE)

# View playlist with features
final_playlist_features %>%
  select(track_order, track_name, artist, danceability, energy, valence)

```


